# CLI to scrape Poncho forecast & display in terminal
# requires BeautifulSoup & lxml parser & textwrap
# recommend shell alias: p = "~/path/to/poncho.py <refcode>"

## usage:
##   python po.py [ref] [-d]
##
## options:
##   <ref>	referral code	from "view in browser" url, e.g XXXX from (http://poncho.is/s/XXXX) defaults to RW5pQ (NYC)
##   -d			suppress detail description - just headline/temps.

import urllib2
import sys
import textwrap
from StringIO import StringIO
from bs4 import BeautifulSoup, Comment

if (len(sys.argv) <= 1):
	print "No search keyword given"
else:
	ref = "%20".join(sys.argv)
	url = 'http://www.trendmicro.com/vinfo/us/threat-encyclopedia/search/' + ref
	r = urllib2.urlopen(url)
	h = r.read()
	p = BeautifulSoup(h, "lxml")

	# strip out comments & head tag
	comments = p.findAll(text=lambda text:isinstance(text, Comment))
	[comment.extract() for comment in comments]
	p.head.extract()

	# Use element & class name to find matching elements and extract the target value strings
	first_result_url = p.find("div", class_ = "resultbox_title").a.get('href')
	first_result_page = urllib2.urlopen(first_result_url)
	malware_page = BeautifulSoup(first_result_page.read(), "lxml")
	risk_rating_element = malware_page.find("div", class_ = "malwareHeader").find("div", class_="headerRight").contents[0].find("div", class_="ratingImage").find("img").get("src")

	risk_rating = risk_rating_element.split("/")[-1][:-4]
	print risk_rating
	# det = p.find("td", class_ = "content w612").p.string
	# tt = p.find_all("td",class_ = "w33")
	# unit = p.find("div", class_="unit").string
	#
	# time1 = tt[0].h4.string
	# temp1 = tt[0].h3.string
	# time2 = tt[1].h4.string
	# temp2 = tt[1].h3.string
	# time3 = tt[2].h4.string
	# temp3 = tt[2].h3.string

	# Output
	# print "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"
	# print result

	# if flag set, print blurb.
	# if '-d' not in str(sys.argv):
	# 	x = textwrap.wrap(det)
	# 	for l in x:
	# 		print l
	#
	# print "\n"+str(time1).upper()+': '+str(temp1)+unit, " | ", str(time2).upper()+': '+str(temp2)+unit, " | ", str(time3)+': '+str(temp3)+unit+"\n"
	#
	# print "Poncho: The World's BEST Personalized Weather Service (poncho.is)\n"
	# print "^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"
